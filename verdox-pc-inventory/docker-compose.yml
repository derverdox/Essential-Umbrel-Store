services:
  app_proxy:
    environment:
      APP_HOST: app
      APP_PORT: 8080
      APP_PROTOCOL: http
    restart: on-failure
    networks:
      - appnet

  db:
    image: postgres:16-alpine
    restart: on-failure
    environment:
      POSTGRES_DB: pcparts
      POSTGRES_USER: pcparts
      POSTGRES_PASSWORD: pcparts
    volumes:
      - ${APP_DATA_DIR}/postgres:/var/lib/postgresql/data
    networks:
      - appnet

  app:
    image: verdox/hardware-inventar-system:1.0.0
    depends_on:
      - db
    restart: on-failure
    environment:
      # -> Spring Boot liest SERVER_PORT als server.port
      SERVER_PORT: 8080
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/pcparts
      SPRING_DATASOURCE_USERNAME: pcparts
      SPRING_DATASOURCE_PASSWORD: pcparts
      # Optional, wenn hinter Proxy korrekte Host/Proto nötig sind:
      # SERVER_FORWARD_HEADERS_STRATEGY: framework
    volumes:
      - ${APP_DATA_DIR}/data:/app/data
      - ${APP_DATA_DIR}/logs:/app/logs
    expose:
      - "8080"      # nur informativ; für’s overlay nicht zwingend
    networks:
      - appnet

networks:
  appnet:
    name: ${APP_ID}_network
    external: true
